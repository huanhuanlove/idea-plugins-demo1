# IntelliJ Platform Artifacts Repositories -> https://plugins.jetbrains.com/docs/intellij/intellij-artifacts.html

# 本地 JDK 路径，配置后强制使用本地JDK，不配置会使用 $JAVA_HOME 的JDK 或自动下载
org.gradle.java.home=D:\\jdk\\jdk21
jdk=21

# 插件信息，发布后不可更改。对应 plugin.xml 的 <id>和<name>
pluginGroup = com.kang.idea.tools
pluginName = Develop Assistant
pluginRepositoryUrl = https://github.com/huanhuanlove/idea-plugins-demo1

# 插件版本号
pluginVersion = 0.0.1

# 1.向后兼容（覆盖大多数用户）、2.向前兼容（未来 1–2 个主版本）、3.官方推荐策略（低版本构建，高版本验证）。最低兼容 2024.2 (242)，上限到 2025.2 (252. )，构建以 2024.2 为准，验证以 2025.1 为准。
pluginSinceBuild = 242
pluginUntilBuild = 252.*

# idea自动下载版本配置i。IU-旗舰版、IC-社区版，以及验证的版本号
platformType = IU
platformVersion = 2025.1.3

# Plugin Dependencies -> https://plugins.jetbrains.com/docs/intellij/plugin-dependencies.html
# 额外第三方插件依赖（格式：Marketplace ID:版本。示例：platformPlugins = com.jetbrains.php:203.4449.22, org.intellij.scala:2023.3.27@EAP）
platformPlugins =

# 内置插件依赖，默认已包含 platform 模块（示例：platformBundledPlugins = com.intellij.java, org.jetbrains.kotlin）
platformBundledPlugins =

# Gradle 版本 -> https://github.com/gradle/gradle/releases
gradleVersion = 8.14.3

# Enable Gradle Configuration Cache -> https://docs.gradle.org/current/userguide/configuration_cache.html
# 启用 Configuration Cache，加速构建（跳过配置阶段）
org.gradle.configuration-cache = true

# Enable Gradle Build Cache -> https://docs.gradle.org/current/userguide/build_cache.html
# 启用 Build Cache（任务输出缓存）
org.gradle.caching = true

# 并行构建多模块
org.gradle.parallel=true

# 常驻 JVM，二次构建秒启
org.gradle.daemon=true

# JVM调优
#org.gradle.jvmargs=-Xmx4g -XX:+UseParallelGC -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -XX:MaxMetaspaceSize=1g

# 测试阶段可开启加速，跳过测试 & Lint（调试阶段）
#systemProp.skip.tests=true
#systemProp.skip.lint=true